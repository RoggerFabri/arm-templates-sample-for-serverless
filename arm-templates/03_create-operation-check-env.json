{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string"
    },
    "service": {
      "type": "object"
    },
    "vnetName": {
      "type": "string"
    },
    "vmComputerName": {
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "string"
    },
    "vmAdminPassword": {
      "type": "string"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v3",
      "allowedValues": [
        "Basic_A0",
        "Basic_A1",
        "Basic_A2",
        "Basic_A3",
        "Basic_A4",
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A5",
        "Standard_A4",
        "Standard_A6",
        "Standard_A7",
        "Standard_A1_v2",
        "Standard_A2m_v2",
        "Standard_A2_v2",
        "Standard_A4m_v2",
        "Standard_A4_v2",
        "Standard_A8m_v2",
        "Standard_A8_v2",
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_B12ms",
        "Standard_B16ms",
        "Standard_B20ms",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D48_v3",
        "Standard_D64_v3",
        "Standard_D48s_v3",
        "Standard_D64s_v3"
      ]
    },
    "vmDiskStorageAccountType": {
      "type": "string",
      "defaultValue": "StandardSSD_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "StandardSSD_LRS",
        "UltraSSD_LRS"
      ]
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "B1",
        "B2",
        "B3",
        "D1",
        "P1V2",
        "P2V2",
        "P3V2",
        "PC2",
        "PC3",
        "PC4",
        "S1",
        "S2",
        "S3"
      ]
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "subnetName": "[parameters('service').identifier]",
    "vmName": "[opeCheck.createName(parameters('prefix'), parameters('service').identifier, '-vm')]",
    "vmNicName": "[opeCheck.createName(parameters('prefix'), parameters('service').identifier, '-vm-nic')]",
    "vmDiskName": "[opeCheck.createName(parameters('prefix'), parameters('service').identifier, '-vm-disk')]",
    "storageAccountsName": "[concat(parameters('prefix'), uniqueString(concat(resourceGroup().id, parameters('service').identifier)))]",
    "appServicePlanName": "[opeCheck.createName(parameters('prefix'), parameters('service').identifier, '-plan')]",
    "applicationInsightsName": "[opeCheck.createName(parameters('prefix'), parameters('service').identifier, '-insights')]",
    "webAppName": "[opeCheck.createName(parameters('prefix'), parameters('service').identifier, '-webapp')]",
    "allowableSubnets": [
      {
        "vnetSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('subnetName'))]",
        "name": "[parameters('service').identifier]"
      }
    ]
  },
  "resources": [
    {
      "name": "[variables('vmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-09-01",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmComputerName')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-10",
            "sku": "19h2-pro",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[variables('vmDiskName')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('vmDiskStorageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
      ]
    }
  ],
  "outputs": {
    "allowableSubnets": {
      "type": "array",
      "value": "[variables('allowableSubnets')]"
    }
  },
  "functions": [
    {
      "namespace": "opeCheck",
      "members": {
        "createName": {
          "parameters": [
            {
              "name": "prefix",
              "type": "string"
            },
            {
              "name": "serviceIdentifier",
              "type": "string"
            },
            {
              "name": "suffix",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[concat(parameters('prefix'), '-', parameters('serviceIdentifier'), parameters('suffix'))]"
          }
        }
      }
    }
  ]
}